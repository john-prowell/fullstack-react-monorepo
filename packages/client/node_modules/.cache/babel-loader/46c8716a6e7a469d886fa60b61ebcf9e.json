{"ast":null,"code":"import _slicedToArray from \"/Users/malcolmlaing/dev/favorite-books/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/malcolmlaing/dev/favorite-books/packages/client/src/components/item.js\";\nimport React from \"react\";\nimport \"./item.css\";\n\nconst Item = props => {\n  const _React$useState = React.useState(props.value),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        editMode = _React$useState4[0],\n        setEditMode = _React$useState4[1];\n\n  const handleEdit = async () => {\n    try {\n      await props.handleEdit(value);\n    } catch (e) {}\n\n    toggleEditMode();\n  };\n\n  const handleCancel = () => {\n    setValue(props.value);\n    toggleEditMode();\n  };\n\n  const toggleEditMode = () => setEditMode(!editMode);\n\n  if (editMode) {\n    return React.createElement(\"div\", {\n      className: \"item-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: value,\n      className: \"item-input\",\n      onChange: event => setValue(event.target.value),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      className: \"primary-button\",\n      onClick: handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"item-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"item-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, value), React.createElement(\"button\", {\n    className: \"edit-button\",\n    onClick: toggleEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    className: \"edit-button\",\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Delete\"));\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/malcolmlaing/dev/favorite-books/packages/client/src/components/item.js"],"names":["React","Item","props","useState","value","setValue","editMode","setEditMode","handleEdit","e","toggleEditMode","handleCancel","event","target"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,0BACMF,KAAK,CAACG,QAAN,CAAeD,KAAK,CAACE,KAArB,CADN;AAAA;AAAA,QACbA,KADa;AAAA,QACNC,QADM;;AAAA,2BAEYL,KAAK,CAACG,QAAN,CAAe,KAAf,CAFZ;AAAA;AAAA,QAEbG,QAFa;AAAA,QAEHC,WAFG;;AAIpB,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMN,KAAK,CAACM,UAAN,CAAiBJ,KAAjB,CAAN;AACD,KAFD,CAEE,OAAOK,CAAP,EAAU,CAAE;;AACdC,IAAAA,cAAc;AACf,GALD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzBN,IAAAA,QAAQ,CAACH,KAAK,CAACE,KAAP,CAAR;AACAM,IAAAA,cAAc;AACf,GAHD;;AAIA,QAAMA,cAAc,GAAG,MAAMH,WAAW,CAAC,CAACD,QAAF,CAAxC;;AAEA,MAAIA,QAAJ,EAAc;AACZ,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,QAAQ,EAAEQ,KAAK,IAAIP,QAAQ,CAACO,KAAK,CAACC,MAAN,CAAaT,KAAd,CAH7B;AAIE,MAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAEO,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAEH,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAPF,CADF;AAgBD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BJ,KAA7B,CADF,EAEE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,OAAO,EAAEM,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,OAAO,EAAE,MAAM,CAAE,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF;AAWD,CA9CD;;AAgDA,eAAeT,IAAf","sourcesContent":["import React from \"react\";\nimport \"./item.css\";\n\nconst Item = props => {\n  const [value, setValue] = React.useState(props.value);\n  const [editMode, setEditMode] = React.useState(false);\n\n  const handleEdit = async () => {\n    try {\n      await props.handleEdit(value);\n    } catch (e) {}\n    toggleEditMode();\n  };\n  const handleCancel = () => {\n    setValue(props.value);\n    toggleEditMode();\n  };\n  const toggleEditMode = () => setEditMode(!editMode);\n\n  if (editMode) {\n    return (\n      <div className=\"item-container\">\n        <input\n          value={value}\n          className=\"item-input\"\n          onChange={event => setValue(event.target.value)}\n          type=\"text\"\n        />\n        <div className=\"button-container\">\n          <button onClick={handleCancel}>Cancel</button>\n          <button className=\"primary-button\" onClick={handleEdit}>\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"item-container\">\n      <span className=\"item-text\">{value}</span>\n      <button className=\"edit-button\" onClick={toggleEditMode}>\n        Edit\n      </button>\n      <button className=\"edit-button\" onClick={() => {}}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}