{"ast":null,"code":"import _slicedToArray from \"/Users/malcolmlaing/dev/favorite-books/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/malcolmlaing/dev/favorite-books/packages/client/src/components/item.js\";\nimport React from \"react\";\nimport \"./item.css\";\n\nconst Item = props => {\n  const _React$useState = React.useState(props.value),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        editMode = _React$useState4[0],\n        setEditMode = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        confirmed = _React$useState6[0],\n        setConfirmed = _React$useState6[1];\n\n  const handleEdit = () => {\n    props.handleEdit(value);\n    toggleEditMode();\n  };\n\n  const handleCancel = () => {\n    setValue(props.value);\n    toggleEditMode();\n  };\n\n  const toggleEditMode = () => setEditMode(!editMode);\n\n  if (editMode) {\n    return React.createElement(\"li\", {\n      className: \"item-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        handleEdit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: value,\n      className: \"item-input\",\n      onChange: event => setValue(event.target.value),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button secondary-button\",\n      onClick: handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"button primary-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n  return React.createElement(\"li\", {\n    className: \"item-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"item-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, value), React.createElement(\"div\", {\n    className: \"left button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button edit-button\",\n    onClick: toggleEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    className: \"button edit-button\",\n    onClick: props.handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Delete\")));\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/malcolmlaing/dev/favorite-books/packages/client/src/components/item.js"],"names":["React","Item","props","useState","value","setValue","editMode","setEditMode","confirmed","setConfirmed","handleEdit","toggleEditMode","handleCancel","event","preventDefault","target","handleDelete"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,0BACMF,KAAK,CAACG,QAAN,CAAeD,KAAK,CAACE,KAArB,CADN;AAAA;AAAA,QACbA,KADa;AAAA,QACNC,QADM;;AAAA,2BAEYL,KAAK,CAACG,QAAN,CAAe,KAAf,CAFZ;AAAA;AAAA,QAEbG,QAFa;AAAA,QAEHC,WAFG;;AAAA,2BAGcP,KAAK,CAACG,QAAN,CAAe,KAAf,CAHd;AAAA;AAAA,QAGbK,SAHa;AAAA,QAGFC,YAHE;;AAKpB,QAAMC,UAAU,GAAG,MAAM;AACvBR,IAAAA,KAAK,CAACQ,UAAN,CAAiBN,KAAjB;AACAO,IAAAA,cAAc;AACf,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzBP,IAAAA,QAAQ,CAACH,KAAK,CAACE,KAAP,CAAR;AACAO,IAAAA,cAAc;AACf,GAHD;;AAKA,QAAMA,cAAc,GAAG,MAAMJ,WAAW,CAAC,CAACD,QAAF,CAAxC;;AAEA,MAAIA,QAAJ,EAAc;AACZ,WACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,QAAQ,EAAEO,KAAK,IAAI;AACjBA,QAAAA,KAAK,CAACC,cAAN;AACAJ,QAAAA,UAAU;AACX,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AACE,MAAA,KAAK,EAAEN,KADT;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,QAAQ,EAAES,KAAK,IAAIR,QAAQ,CAACQ,KAAK,CAACE,MAAN,CAAaX,KAAd,CAH7B;AAIE,MAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAYE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAA4C,MAAA,OAAO,EAAEQ,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAZF,CADF,CADF;AAyBD;;AAED,SACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BR,KAA7B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAuC,IAAA,OAAO,EAAEO,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAuC,IAAA,OAAO,EAAET,KAAK,CAACc,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAFF,CADF;AAaD,CA1DD;;AA4DA,eAAef,IAAf","sourcesContent":["import React from \"react\";\nimport \"./item.css\";\n\nconst Item = props => {\n  const [value, setValue] = React.useState(props.value);\n  const [editMode, setEditMode] = React.useState(false);\n  const [confirmed, setConfirmed] = React.useState(false);\n\n  const handleEdit = () => {\n    props.handleEdit(value);\n    toggleEditMode();\n  };\n\n  const handleCancel = () => {\n    setValue(props.value);\n    toggleEditMode();\n  };\n\n  const toggleEditMode = () => setEditMode(!editMode);\n\n  if (editMode) {\n    return (\n      <li className=\"item-container\">\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            handleEdit();\n          }}\n        >\n          <input\n            value={value}\n            className=\"item-input\"\n            onChange={event => setValue(event.target.value)}\n            type=\"text\"\n          />\n          <div className=\"button-container\">\n            <button className=\"button secondary-button\" onClick={handleCancel}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"button primary-button\">\n              Save\n            </button>\n          </div>\n        </form>\n      </li>\n    );\n  }\n\n  return (\n    <li className=\"item-container\">\n      <span className=\"item-text\">{value}</span>\n      <div className=\"left button-container\">\n        <button className=\"button edit-button\" onClick={toggleEditMode}>\n          Edit\n        </button>\n        <button className=\"button edit-button\" onClick={props.handleDelete}>\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}