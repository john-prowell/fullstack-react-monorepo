{"ast":null,"code":"import _slicedToArray from \"/Users/malcolmlaing/dev/favorite-books/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/malcolmlaing/dev/favorite-books/packages/client/src/components/item.js\";\nimport React from \"react\";\n\nconst Item = props => {\n  const _React$useState = React.useState(props.value),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        editMode = _React$useState4[0],\n        setEditMode = _React$useState4[1];\n\n  const handleEdit = async () => {\n    props.handleEdit(value);\n  };\n\n  const toggleEditMode = () => setEditMode(!editMode);\n\n  console.log(\"isInEditMode\");\n\n  if (editMode) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: value,\n      onChange: event => setValue(event.target.value),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"okay\"));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, value, React.createElement(\"button\", {\n    onClick: toggleEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Edit\"));\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/malcolmlaing/dev/favorite-books/packages/client/src/components/item.js"],"names":["React","Item","props","useState","value","setValue","editMode","setEditMode","handleEdit","toggleEditMode","console","log","event","target"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,0BACMF,KAAK,CAACG,QAAN,CAAeD,KAAK,CAACE,KAArB,CADN;AAAA;AAAA,QACbA,KADa;AAAA,QACNC,QADM;;AAAA,2BAEYL,KAAK,CAACG,QAAN,CAAe,KAAf,CAFZ;AAAA;AAAA,QAEbG,QAFa;AAAA,QAEHC,WAFG;;AAIpB,QAAMC,UAAU,GAAG,YAAY;AAC7BN,IAAAA,KAAK,CAACM,UAAN,CAAiBJ,KAAjB;AACD,GAFD;;AAGA,QAAMK,cAAc,GAAG,MAAMF,WAAW,CAAC,CAACD,QAAF,CAAxC;;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,MAAIL,QAAJ,EAAc;AACZ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,QAAQ,EAAEQ,KAAK,IAAIP,QAAQ,CAACO,KAAK,CAACC,MAAN,CAAaT,KAAd,CAF7B;AAGE,MAAA,IAAI,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAQ,MAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CADF;AAUD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KADH,EAEE;AAAQ,IAAA,OAAO,EAAEK,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF;AAMD,CA9BD;;AAgCA,eAAeR,IAAf","sourcesContent":["import React from \"react\";\n\nconst Item = props => {\n  const [value, setValue] = React.useState(props.value);\n  const [editMode, setEditMode] = React.useState(false);\n\n  const handleEdit = async () => {\n    props.handleEdit(value);\n  };\n  const toggleEditMode = () => setEditMode(!editMode);\n\n  console.log(\"isInEditMode\");\n\n  if (editMode) {\n    return (\n      <div>\n        <input\n          value={value}\n          onChange={event => setValue(event.target.value)}\n          type=\"text\"\n        />\n        <button onClick={handleEdit}>okay</button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {value}\n      <button onClick={toggleEditMode}>Edit</button>\n    </div>\n  );\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}