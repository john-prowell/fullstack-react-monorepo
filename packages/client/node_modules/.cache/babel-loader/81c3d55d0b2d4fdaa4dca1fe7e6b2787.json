{"ast":null,"code":"import _slicedToArray from \"/Users/malcolmlaing/dev/favorite-books/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/malcolmlaing/dev/favorite-books/packages/client/src/components/book.js\";\nimport React from \"react\";\nimport \"./book.css\";\n\nconst Book = props => {\n  const _React$useState = React.useState(props.value),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        editMode = _React$useState4[0],\n        setEditMode = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        confirmed = _React$useState6[0],\n        setConfirmed = _React$useState6[1];\n\n  const handleEdit = () => {\n    props.handleEdit(value);\n    toggleEditMode();\n  };\n\n  const handleCancel = () => {\n    setValue(props.value);\n    toggleEditMode();\n  };\n\n  const handleDelete = () => {\n    if (!confirmed) {\n      setConfirmed(true);\n      return;\n    }\n\n    setConfirmed(false);\n    props.handleDelete();\n  };\n\n  const toggleEditMode = () => setEditMode(!editMode);\n\n  const children = editMode ? React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      handleEdit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: value,\n    className: \"item-input\",\n    onChange: event => setValue(event.target.value),\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button secondary-button\",\n    onClick: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button primary-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Save\"))) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"item-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, value), React.createElement(\"div\", {\n    className: \"left button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button edit-button\",\n    onClick: toggleEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    className: \"button edit-button\",\n    onClick: handleDelete,\n    style: confirmed ? {\n      color: \"red\"\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, !confirmed ? \"Delete\" : \"Confirm?\")));\n  return React.createElement(\"li\", {\n    className: \"item-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, children);\n};\n\nexport default Book;","map":{"version":3,"sources":["/Users/malcolmlaing/dev/favorite-books/packages/client/src/components/book.js"],"names":["React","Book","props","useState","value","setValue","editMode","setEditMode","confirmed","setConfirmed","handleEdit","toggleEditMode","handleCancel","handleDelete","children","event","preventDefault","target","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,0BACMF,KAAK,CAACG,QAAN,CAAeD,KAAK,CAACE,KAArB,CADN;AAAA;AAAA,QACbA,KADa;AAAA,QACNC,QADM;;AAAA,2BAEYL,KAAK,CAACG,QAAN,CAAe,KAAf,CAFZ;AAAA;AAAA,QAEbG,QAFa;AAAA,QAEHC,WAFG;;AAAA,2BAGcP,KAAK,CAACG,QAAN,CAAe,KAAf,CAHd;AAAA;AAAA,QAGbK,SAHa;AAAA,QAGFC,YAHE;;AAKpB,QAAMC,UAAU,GAAG,MAAM;AACvBR,IAAAA,KAAK,CAACQ,UAAN,CAAiBN,KAAjB;AACAO,IAAAA,cAAc;AACf,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzBP,IAAAA,QAAQ,CAACH,KAAK,CAACE,KAAP,CAAR;AACAO,IAAAA,cAAc;AACf,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAM;AACzB,QAAI,CAACL,SAAL,EAAgB;AACdC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD;;AACDA,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAP,IAAAA,KAAK,CAACW,YAAN;AACD,GAPD;;AASA,QAAMF,cAAc,GAAG,MAAMJ,WAAW,CAAC,CAACD,QAAF,CAAxC;;AAEA,QAAMQ,QAAQ,GAAGR,QAAQ,GACvB;AACE,IAAA,QAAQ,EAAES,KAAK,IAAI;AACjBA,MAAAA,KAAK,CAACC,cAAN;AACAN,MAAAA,UAAU;AACX,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,QAAQ,EAAEW,KAAK,IAAIV,QAAQ,CAACU,KAAK,CAACE,MAAN,CAAab,KAAd,CAH7B;AAIE,IAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAYE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEQ,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAZF,CADuB,GAuBvB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BR,KAA7B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAuC,IAAA,OAAO,EAAEO,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,OAAO,EAAEE,YAFX;AAGE,IAAA,KAAK,EAAEL,SAAS,GAAG;AAAEU,MAAAA,KAAK,EAAE;AAAT,KAAH,GAAsB,EAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACV,SAAD,GAAa,QAAb,GAAwB,UAL3B,CAJF,CAFF,CAvBF;AAwCA,SAAO;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCM,QAAhC,CAAP;AACD,CAnED;;AAqEA,eAAeb,IAAf","sourcesContent":["import React from \"react\";\nimport \"./book.css\";\n\nconst Book = props => {\n  const [value, setValue] = React.useState(props.value);\n  const [editMode, setEditMode] = React.useState(false);\n  const [confirmed, setConfirmed] = React.useState(false);\n\n  const handleEdit = () => {\n    props.handleEdit(value);\n    toggleEditMode();\n  };\n\n  const handleCancel = () => {\n    setValue(props.value);\n    toggleEditMode();\n  };\n\n  const handleDelete = () => {\n    if (!confirmed) {\n      setConfirmed(true);\n      return;\n    }\n    setConfirmed(false);\n    props.handleDelete();\n  };\n\n  const toggleEditMode = () => setEditMode(!editMode);\n\n  const children = editMode ? (\n    <form\n      onSubmit={event => {\n        event.preventDefault();\n        handleEdit();\n      }}\n    >\n      <input\n        value={value}\n        className=\"item-input\"\n        onChange={event => setValue(event.target.value)}\n        type=\"text\"\n      />\n      <div className=\"button-container\">\n        <button className=\"button secondary-button\" onClick={handleCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\" className=\"button primary-button\">\n          Save\n        </button>\n      </div>\n    </form>\n  ) : (\n    <React.Fragment>\n      <span className=\"item-text\">{value}</span>\n      <div className=\"left button-container\">\n        <button className=\"button edit-button\" onClick={toggleEditMode}>\n          Edit\n        </button>\n        <button\n          className=\"button edit-button\"\n          onClick={handleDelete}\n          style={confirmed ? { color: \"red\" } : {}}\n        >\n          {!confirmed ? \"Delete\" : \"Confirm?\"}\n        </button>\n      </div>\n    </React.Fragment>\n  );\n\n  return <li className=\"item-container\">{children}</li>;\n};\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}